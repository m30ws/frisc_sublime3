%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: FRISC
file_extensions: [a]

scope: frisc.a

contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.a
      push: double_quoted_string
    - match: "\'"
      scope: punctuation.definition.string.begin.a
      push: double_quoted_string

    # Comments begin with a ';' and finish at the end of the line
    - match: ';'
      scope: punctuation.definition.comment.a
      push: line_comment

    # Main keywords
    - match: '\b(ADD|ADC|SUB|SBC|CMP|AND|OR|XOR|SHL|SHR|ASHR|ROTL|ROTR|MOVE|PUSH|POP)\b'
      scope: keyword

    # Mem ops
    - match: '\b(LOAD[(B|H)]?|STORE[(B|H)]?)\b'
      scope: keyword

    # (Conditional) mnemonics and jumps
    - match: '\b(JP|JR|CALL|RET|RETI|RETN|HALT)(_(C|NC|V|NV|N|NN|M|P|Z|NZ|EQ|NE|ULE|ULT|UGE|UGT|SLE|SLT|SGE|SGT))?\b'
      scope: keyword

    # Assembler commands
    - match: '\b(ORG|EQU|DW|DH|DB|DS)\b'
      scope: punctuation.definition.annotation

    # Numbers
    - match: '\b(-)?[0-9A-Fa-f]+\b'
      scope: constant.numeric

    # Registers
    - match: '\b(R0|R1|R2|R3|R4|R5|R6|R7|SP|SR)\b'
      scope: variable.language

    # Number format specifiers (%b, %d, %h)
    - match: '((?<=( |\t|\+|\-))(%[Bb]|%[Dd]|%[Hh])(?=( |\t)))'
      scope: variable.annotation

    # Macros
    - match: '(MACRO|ENDMACRO)'
      scope: support.function

    # Variable/address names
    - match: '\b[_A-Za-z]+\b'
      scope: variable

  double_quoted_string:
    - meta_scope: string.quoted.double.a
    - match: '\\.'
      scope: constant.character.escape.a
    - match: '"'
      scope: punctuation.definition.string.end.a
      pop: true
    - match: "'"
      scope: punctuation.definition.string.end.a
      pop: true

  line_comment:
    - meta_scope: comment.line.a
    - match: $
      pop: true
